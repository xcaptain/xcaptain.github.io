{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/shortest-seq-sum-greater-than-target/","webpackCompilationHash":"f6f4562cce5c2ca1e160","result":{"data":{"site":{"siteMetadata":{"author":{"name":"Joey Xie","contacts":{"twitter":"xf_joey"}},"disqusShortname":"joeyxf-com","subtitle":"每天进步一点点","title":"Joey的博客","url":"https://joeyxf.com"}},"markdownRemark":{"id":"9a2a3b9f-3e6d-5cec-b5a6-5cfbc34d9010","html":"<h2 id=\"问题描述\"><a href=\"#%E9%97%AE%E9%A2%98%E6%8F%8F%E8%BF%B0\" aria-label=\"问题描述 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>问题描述</h2>\n<p>给定一个纯数字的数组，以及一个数字，从这个数组中找到一个连续子数组满足连续子数组之和大于或等于这个给定的数字且这个连续子数组的长度最短</p>\n<h2 id=\"问题分析\"><a href=\"#%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90\" aria-label=\"问题分析 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>问题分析</h2>\n<p>已知这个问题最快的解法就是尺取法，所谓尺取就是指先移动右侧索引，找到一个最长的连续子数组，再不断调整左侧索引，找到一个最短的窗口</p>\n<h2 id=\"代码示例\"><a href=\"#%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B\" aria-label=\"代码示例 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码示例</h2>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function\">shortest_seq</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">:</span> Vec<span class=\"token operator\">&lt;</span>usize<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> usize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token punctuation\">(</span>usize<span class=\"token punctuation\">,</span> usize<span class=\"token punctuation\">,</span> usize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> start <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> end <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> len <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> ans <span class=\"token operator\">=</span> len <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">loop</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">while</span> sum <span class=\"token operator\">&lt;</span> target <span class=\"token operator\">&amp;&amp;</span> end <span class=\"token operator\">&lt;</span> len <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 移动右侧索引，找到一个最长的窗口</span>\n            sum <span class=\"token operator\">+=</span> arr<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            end <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> sum <span class=\"token operator\">&lt;</span> target <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 右侧索引移动到头了但是子数组之和还是更小，说明没有找到这样的子数组，要跳出循环</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        ans <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span> end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 比较2次窗口哪个最短</span>\n        sum <span class=\"token operator\">-=</span> arr<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 更新子数组之和</span>\n        start <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 移动左侧索引</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> ans <span class=\"token operator\">></span> len <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 没找到这样的子数组</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span> start<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>如果以前没接触过这类问题，第一次做是比较难想到这个解法，不过看过分析之后感觉还是比较简单的。我把具体代码以及单测用例都传到<a href=\"https://github.com/xcaptain/rust-algorithms/blob/master/src/iters/shortest_seq.rs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github</a></p>","fields":{"slug":"/posts/shortest-seq-sum-greater-than-target/","tagSlugs":["/tag/algorithms/","/tag/programming/","/tag/rust/"]},"frontmatter":{"date":"2017-11-24 01:16:00","description":"使用尺取法计算数组中最短连续子数组之和大于某个指定的数","tags":["Algorithms","Programming","Rust"],"title":"使用尺取法计算数组中最短连续子数组之和大于某个指定的数"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/shortest-seq-sum-greater-than-target/"}}}