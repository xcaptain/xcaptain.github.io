{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/php-guzzle-http-client/","webpackCompilationHash":"f6f4562cce5c2ca1e160","result":{"data":{"site":{"siteMetadata":{"author":{"name":"Joey Xie","contacts":{"twitter":"xf_joey"}},"disqusShortname":"joeyxf-com","subtitle":"每天进步一点点","title":"Joey的博客","url":"https://joeyxf.com"}},"markdownRemark":{"id":"a9388f05-1322-506f-adcb-6677b8abda2a","html":"<p>最原始的发送http请求的方法是调用原生的curl扩展，这就需要在php.ini中允许\n<code class=\"language-text\">extension=curl.so</code>，使用方式也很简单，下面是几个发送基本GET, POST请求的例子。</p>\n<ol>\n<li>\n<p>curl 发送GET请求:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$ch</span> <span class=\"token operator\">=</span> <span class=\"token function\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_HEADER</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不返回http头</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_RETURNTRANSFER</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> <span class=\"token comment\">// 按字符串返回而不是输出到屏幕上</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_TIMEOUT</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置连接超时时间</span>\n<span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>curl 发送POST请求:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$ch</span> <span class=\"token operator\">=</span> <span class=\"token function\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_POST</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 表明是发送post请求</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_POSTFIELDS</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$jsonString</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// post的数据，支持json字符串和http_build_query之后的参数</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_RETURNTRANSFER</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>curl上传文件:\n也是一个post请求，例子见下面</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$ch</span> <span class=\"token operator\">=</span> <span class=\"token function\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_POST</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_POSTFIELDS</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n<span class=\"token single-quoted-string string\">'file'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token punctuation\">\\</span>CurlFile</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fullFileName</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$mimeType</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token single-quoted-string string\">'param1'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$value1</span><span class=\"token punctuation\">,</span>\n<span class=\"token single-quoted-string string\">'param2'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$value2</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_RETURNTRANSFER</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_HTTPHEADER</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n<span class=\"token single-quoted-string string\">'Content-type: multipart/form-data;'</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$result</span><span class=\"token operator\">=</span>curl_exec <span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncurl_close <span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ol>\n<p>第一次使用curl上传文件的时候还遇到了一点小问题，网上大部分写法都是用<code class=\"language-text\">&#39;file&#39; =&gt; @&quot;$fullFileName&quot;</code>来加载文件的，我用这种写法反复测试了很久都不能获取到真是的文件，后来才发现<a href=\"https://secure.php.net/manual/en/class.curlfile.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CurlFile</a>这个类，按照文档下面评论的说法，php发送multipart请求的时候会有问题，解决办法有2个，1：允许<code class=\"language-text\">CURLOPT_SAFE_UPLOAD</code>， 2：使用CURLFile 而不是 ”@”</p>\n<p>我偏好的http请求库 <a href=\"https://github.com/guzzle/guzzle\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">guzzle</a>\n作为一个应用开发者而言，更多的封装往往是更好的，curl太原始了，接口太少，选项太多，如果要发一个post请求，得先去查一下如何设置数据，如何设置请求头，返回值说明什么意思，如何表示20x, 30x, 40x, 50x的状态码，但是作为一个http库选择就更少了，我们只要知道如何创建请求对象，如何发送请求，响应对象，异常是什么就够了，知道了这几个概念如果要发送一种特殊请求只需要修改请求对象就行了</p>\n<p>请求对象:</p>\n<p>一个简单的GET请求的对象</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$request</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token punctuation\">\\</span>GuzzleHttp<span class=\"token punctuation\">\\</span>Psr7<span class=\"token punctuation\">\\</span>Request</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'http://httpbin.org'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>一个简单的POST请求的对象</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$request</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token punctuation\">\\</span>GuzzleHttp<span class=\"token punctuation\">\\</span>Psr7<span class=\"token punctuation\">\\</span>Request</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'http://httpbin.org'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>一个简单的发送multipart/form-data请求上传文件的例子</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$r</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$client</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token single-quoted-string string\">'multipart'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'name'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'file'</span><span class=\"token punctuation\">,</span><span class=\"token single-quoted-string string\">'contents'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$body</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'name'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'user_id'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'contents'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>发送请求：\n首先要有一个客户端对象，这个对象能够发送一个请求对象，然后获得响应</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$client</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Client</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>发送请求：</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$client</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在调试curl发请求的时候还发现了一个小技巧抓包，用<code class=\"language-text\">nc -l -p 8888</code>开启一个监听端口，然后把curl的请求地址设置为<code class=\"language-text\">http://127.0.0.1:8888</code>，这样就能抓到php发送http请求的数据了，总之guzzle比curl强大太多，能用就多用。</p>","fields":{"slug":"/posts/php-guzzle-http-client/","tagSlugs":["/tag/php/","/tag/programming/"]},"frontmatter":{"date":"2016-04-28","description":"最原始的发送http请求的方法是调用原生的curl扩展，这就需要在php.ini中允许`extension=curl.so`，使用方式也很简单，下面是几个发送基本GET, POST请求的例子...","tags":["PHP","Programming"],"title":"php使用guzzle发送http请求"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/php-guzzle-http-client/"}}}