{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/php-pitfalls/","webpackCompilationHash":"42f3b01b292ae3aa1064","result":{"data":{"site":{"siteMetadata":{"author":{"name":"Joey Xie","contacts":{"twitter":"xf_joey"}},"disqusShortname":"joeyxf-com","subtitle":"每天进步一点点","title":"Joey的博客","url":"https://joeyxf.com"}},"markdownRemark":{"id":"f8764879-0846-5016-a3df-36141f1f7f77","html":"<p>最近使用php时遇到一个很奇怪的问题，即</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// php</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token single-quoted-string string\">'a'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>这个问题在web开发的时候可能会导致一些莫名其妙的问题，比较了一些其他语言之后发现大部分是不这么做的，先总结 0==‘a’ ==> true的</p>\n<div class=\"gatsby-highlight\" data-language=\"perl\"><pre class=\"language-perl\"><code class=\"language-perl\"><span class=\"token comment\"># perl</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string\">'a'</span> <span class=\"token comment\"># 1</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token string\">'a'</span> <span class=\"token comment\"># 0</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string\">'0'</span> <span class=\"token comment\"># 1</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// php</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token single-quoted-string string\">'a'</span> <span class=\"token comment\">// ==> true</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">===</span> <span class=\"token single-quoted-string string\">'a'</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token single-quoted-string string\">'a'</span> <span class=\"token comment\">// ==> false</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token single-quoted-string string\">'0'</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>0==‘a’ ==> False的：</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># python 3.6</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string\">'a'</span> <span class=\"token comment\"># False</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string\">'0'</span> <span class=\"token comment\"># False</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># ruby 2.4</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string\">'a'</span> <span class=\"token comment\"># false</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string\">'0'</span> <span class=\"token comment\"># false</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"elisp\"><pre class=\"language-elisp\"><code class=\"language-elisp\"><span class=\"token comment\">; elisp</span>\n<span class=\"token punctuation\">(</span><span class=\"token car\">=</span> <span class=\"token number\">0</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">;; error</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ocaml\"><pre class=\"language-ocaml\"><code class=\"language-ocaml\"><span class=\"token comment\">(* ocaml 4.04.1 *)</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">(* error *)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"haskell\"><pre class=\"language-haskell\"><code class=\"language-haskell\"><span class=\"token comment\">-- ghci 8.0.2</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token char\">'0'</span> <span class=\"token comment\">-- error</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"erlang\"><pre class=\"language-erlang\"><code class=\"language-erlang\"><span class=\"token comment\">% erlang otp 20</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token quoted-atom atom\">'0'</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">% false</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// C</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">char</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">==</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>其他更加现代的语言，如rust,typescript,idris等就不说了，强大的type inference导致这样的代码根本不能通过编译器。\n按照这样对照看来和php行为类似的只有perl，其他语言比较0==‘a’要么报错，要么返回false。不管是返回true还是false，我还是更喜欢在编译时报错，这样可以及时发现代码中的问题。</p>","fields":{"slug":"/posts/php-pitfalls/","tagSlugs":["/tag/php/","/tag/programming/"]},"frontmatter":{"date":"2017-06-30","description":"最近使用php时遇到一个很奇怪的问题...","tags":["PHP","Programming"],"title":"php陷阱与缺陷"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/php-pitfalls/"}}}