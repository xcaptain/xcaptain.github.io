{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/php-meta-programming/","webpackCompilationHash":"d94862b0a5cb0cab2c6f","result":{"data":{"site":{"siteMetadata":{"author":{"name":"Joey Xie","contacts":{"twitter":"xf_joey"}},"disqusShortname":"joeyxf-com","subtitle":"每天进步一点点","title":"Joey的博客","url":"https://joeyxf.com"}},"markdownRemark":{"id":"311c8d25-68bd-5f6f-bd1c-c49fc6da22cb","html":"<p>去年在学习ruby的时候就看到了很多元编程的例子，用一个方法来生成多个类似的方法，避免制造重复的代码，ruby用的是method_missing来实现的。</p>\n<p>今天工作遇到一个小问题，需要写一个简单的脚本来统计某个时间段用户的发帖信息，需求很简单要实现也很简单。最初的设计见下面：</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">UpdateUserRank</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getDayRank</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getMonthRank</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getAllRank</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setDayRank</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setMonthRank</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setAllRank</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>需要写3个get方法，3个set方法，这种形式实在是太不方便维护了，每个函数的功能类似，而且函数名也类似，有没有什么办法能够不要写这么多函数呢？利用php的<code class=\"language-text\">__call</code>方法可以很简单的实现</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">UpdateUserRank</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">getMethods</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'getDayRank'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'getMonthRank'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'getAllRank'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">setMethods</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'setDayRank'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'setMonthRank'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'setAllRank'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">getMethods</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$num</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">redis</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">zrevrange</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">_key</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$num</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">setMethods</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$nowtime</span> <span class=\"token operator\">=</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span> <span class=\"token operator\">==</span> <span class=\"token single-quoted-string string\">'setDayRank'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$ago</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$nowtime</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'getDayRank'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span> <span class=\"token operator\">==</span> <span class=\"token single-quoted-string string\">'setMonthRank'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$ago</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$nowtime</span> <span class=\"token operator\">-</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">3600</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'getMonthRank'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$ago</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'getAllRank'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"select authorid, count(authorid) as threadnum from dz_forum_thread where dateline between <span class=\"token interpolation\"><span class=\"token variable\">$ago</span></span> and <span class=\"token interpolation\"><span class=\"token variable\">$nowtime</span></span> group by authorid\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$sth</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">pdo</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$sth</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sth</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PDO</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">FETCH_ASSOC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$authorid</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'authorid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$threadnum</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'threadnum'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">redis</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">zAdd</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">_key</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$threadnum</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$authorid</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"不合法的方法: \"</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$name</span> <span class=\"token punctuation\">.</span> <span class=\"token double-quoted-string string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>调用一个类里面的方法时，如果在当前类没有找到这个方法就会逐层往父类查找，直到找到对应的方法，但是如果这个类或者是父类定义了<code class=\"language-text\">__call</code>方法，则能自动处理找不到的方法，接受2个参数，第一个是函数名，第二个是函数名传过来的参数，是一个数组。基本上可以说<code class=\"language-text\">__call</code>实现了<code class=\"language-text\">method not defined</code>这个异常的处理吧。</p>\n<p>因为php的正则没有ruby简单，所以在这里我先定义了2个数组，对象调用的方法必须在这2个数组中才能执行，否则就报不合法的方法，然后退出，也许还可以通过<code class=\"language-text\">__get</code>, <code class=\"language-text\">__set</code>来实现，谁知道呢？</p>","fields":{"slug":"/posts/php-meta-programming/","tagSlugs":["/tag/php/","/tag/programming/"]},"frontmatter":{"date":"2015-04-17","description":"去年在学习ruby的时候就看到了很多元编程的例子，用一个方法来生成多个类似的方法，避免制造重复的代码，ruby用的是method_missing来实现...","tags":["PHP","Programming"],"title":"一个简单的元编程例子"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/php-meta-programming/"}}}