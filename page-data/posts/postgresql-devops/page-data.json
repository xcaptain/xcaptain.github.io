{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/postgresql-devops/","result":{"data":{"site":{"siteMetadata":{"author":{"name":"Joey Xie","contacts":{"twitter":"xf_joey"}},"disqusShortname":"joeyxf-com","subtitle":"每天进步一点点","title":"Joey的博客","url":"https://joeyxf.com"}},"markdownRemark":{"id":"24f5127e-a5c4-5200-aa2d-88a358a87842","html":"<p>在实际业务中遇到很多 mysql 不适用的场景，在初步使用了 postgresql 之后发现这个数据库功能非常强大，比 mysql 好多了，以后的业务都优先选择这个数据库，以下是一些服务器配置及日常开发中的经验</p>\n<h2 id=\"服务器配置ubuntu-1804\" style=\"position:relative;\"><a href=\"#%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEubuntu-1804\" aria-label=\"服务器配置ubuntu 1804 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>服务器配置(ubuntu 18.04)</h2>\n<ol>\n<li>\n<p>安装 postgresql，截止目前的稳定版是 11</p>\n<p><code class=\"language-text\">apt install postgresql</code></p>\n</li>\n<li>\n<p>安装 postgresql 客户端，装完就能使用 psql 命令了</p>\n<p><code class=\"language-text\">apt install postgresql-client</code></p>\n</li>\n<li>\n<p>确认 postgresql 服务器运行着</p>\n<p><code class=\"language-text\">ps aux | grep postgres</code> 或者 <code class=\"language-text\">ss -naltp | grep 5432</code></p>\n</li>\n</ol>\n<p>安装完成之后就可以通过 psql 连接服务器了，但是现在还只能用<code class=\"language-text\">postgres</code>这个用户。<code class=\"language-text\">sudo -u postgres -i</code> 切换用户，然后<code class=\"language-text\">psql</code>就进入 shell 界面了，这个是最高权限的用户，一般不使用在应用中，如果要连接 web 应用需要创建一个普通权限的用户。</p>\n<h2 id=\"数据库用户管理\" style=\"position:relative;\"><a href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86\" aria-label=\"数据库用户管理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>数据库用户管理</h2>\n<p>使用 postgres 账户进入 psql 界面创建用户：</p>\n<ol>\n<li>\n<p>创建用户</p>\n<p><code class=\"language-text\">CREATE USER myappuser WITH PASSWORD &#39;somepassword&#39;;</code></p>\n</li>\n<li>\n<p>给用户授权</p>\n<p>嫌麻烦可以直接授予超级用户权限，如果不嫌麻烦就按照文档一个一个配置权限。 <code class=\"language-text\">ALTER ROLE myappuser WITH SUPERUSER;</code></p>\n</li>\n<li>\n<p>创建数据库</p>\n<p><code class=\"language-text\">create database demodb</code></p>\n</li>\n</ol>\n<p>用户管理其实比较重要，有时候我们想创建只读账号给一些业务使用，创建步骤如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">USER</span> readonly <span class=\"token keyword\">WITH</span> ENCRYPTED PASSWORD <span class=\"token string\">'readonly'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">USAGE</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">to</span> readonly<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">PRIVILEGES</span> <span class=\"token operator\">IN</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLES</span> <span class=\"token keyword\">TO</span> readonly<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">CONNECT</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">DATABASE</span> foo <span class=\"token keyword\">to</span> readonly<span class=\"token punctuation\">;</span>\n\\c foo\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">PRIVILEGES</span> <span class=\"token operator\">IN</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLES</span> <span class=\"token keyword\">TO</span> readonly<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">USAGE</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">to</span> readonly<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">ALL</span> SEQUENCES <span class=\"token operator\">IN</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">TO</span> readonly<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">TABLES</span> <span class=\"token operator\">IN</span> <span class=\"token keyword\">SCHEMA</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">TO</span> readonly<span class=\"token punctuation\">;</span></code></pre></div>\n<p>还有一种方法是创建一个只读的角色，然后把用户添加到这个角色中</p>\n<h2 id=\"触发器\" style=\"position:relative;\"><a href=\"#%E8%A7%A6%E5%8F%91%E5%99%A8\" aria-label=\"触发器 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>触发器</h2>\n<p>postgresql功能很强大，可以自定义很多函数，比如说存一棵树到表里可以使用ltree扩展</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token operator\">OR</span> <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">FUNCTION</span> update_parent_path<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">RETURNS</span> <span class=\"token keyword\">TRIGGER</span> <span class=\"token keyword\">AS</span> $$\n    <span class=\"token keyword\">DECLARE</span>\n        path ltree<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">BEGIN</span>\n        <span class=\"token keyword\">IF</span> NEW<span class=\"token punctuation\">.</span>parent_id <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span> <span class=\"token operator\">OR</span> NEW<span class=\"token punctuation\">.</span>parent_id <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">THEN</span>\n            NEW<span class=\"token punctuation\">.</span>parent_path <span class=\"token operator\">=</span> <span class=\"token string\">'root'</span>::ltree<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">ELSEIF</span> TG_OP <span class=\"token operator\">=</span> <span class=\"token string\">'INSERT'</span> <span class=\"token operator\">OR</span> OLD<span class=\"token punctuation\">.</span>parent_id <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span> <span class=\"token operator\">OR</span> OLD<span class=\"token punctuation\">.</span>parent_id <span class=\"token operator\">!=</span> NEW<span class=\"token punctuation\">.</span>parent_id <span class=\"token keyword\">THEN</span>\n            <span class=\"token keyword\">EXECUTE</span> <span class=\"token function\">FORMAT</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SELECT parent_path || id::text FROM %I WHERE id = $1'</span><span class=\"token punctuation\">,</span> TG_TABLE_NAME<span class=\"token punctuation\">)</span> <span class=\"token keyword\">using</span> NEW<span class=\"token punctuation\">.</span>parent_id <span class=\"token keyword\">INTO</span> PATH<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">IF</span> path <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">THEN</span>\n                RAISE EXCEPTION <span class=\"token string\">'Invalid parent_id %'</span><span class=\"token punctuation\">,</span> NEW<span class=\"token punctuation\">.</span>parent_id<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">END</span> <span class=\"token keyword\">IF</span><span class=\"token punctuation\">;</span>\n            NEW<span class=\"token punctuation\">.</span>parent_path <span class=\"token operator\">=</span> path<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">END</span> <span class=\"token keyword\">IF</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">RETURN</span> NEW<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">END</span><span class=\"token punctuation\">;</span>\n$$ <span class=\"token keyword\">LANGUAGE</span> plpgsql<span class=\"token punctuation\">;</span></code></pre></div>\n<p>上面这个<code class=\"language-text\">update_parent_path</code>函数返回了一个触发器，可以附加到一个表上，这样可以实现递归插入查询</p>\n<p>但是有些地方就没那么方便了，比如说对比<code class=\"language-text\">on update CURRENT_TIMESTAMP</code>，必须再创建一个触发器</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token operator\">OR</span> <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">FUNCTION</span> update_changetimestamp_column<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">RETURNS</span> <span class=\"token keyword\">TRIGGER</span> <span class=\"token keyword\">AS</span> $$\n    <span class=\"token keyword\">BEGIN</span>\n        NEW<span class=\"token punctuation\">.</span>updated_at <span class=\"token operator\">=</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">RETURN</span> NEW<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">END</span><span class=\"token punctuation\">;</span>\n$$ <span class=\"token keyword\">language</span> plpgsql<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"条件分组\" style=\"position:relative;\"><a href=\"#%E6%9D%A1%E4%BB%B6%E5%88%86%E7%BB%84\" aria-label=\"条件分组 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>条件分组</h2>\n<p>在group by语句中如果还要继续分组，可以用filter语句，以下建了一个简单的例子用来说明按comment_id分组，然后通过dir来过滤的用法，一条语句就能查出某个评论点赞点踩的数量</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> test <span class=\"token punctuation\">(</span>\n    user_id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n    comment_id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n    dir <span class=\"token keyword\">int</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> test<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">,</span> comment_id<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> test<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">,</span> comment_id<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> test<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">,</span> comment_id<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> test<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">,</span> comment_id<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> test<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">,</span> comment_id<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> test<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">,</span> comment_id<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> test<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">,</span> comment_id<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> test<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">,</span> comment_id<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> test<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">,</span> comment_id<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> test<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">,</span> comment_id<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> test<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">,</span> comment_id<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> test <span class=\"token keyword\">where</span> comment_id <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> comment_id<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span>comment_id<span class=\"token punctuation\">)</span> filter <span class=\"token punctuation\">(</span><span class=\"token keyword\">where</span> dir<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> up_votes<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span>comment_id<span class=\"token punctuation\">)</span> filter <span class=\"token punctuation\">(</span><span class=\"token keyword\">where</span> dir<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> down_votes <span class=\"token keyword\">from</span> test <span class=\"token keyword\">where</span> comment_id <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> comment_id<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"daterange-type\" style=\"position:relative;\"><a href=\"#daterange-type\" aria-label=\"daterange type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>daterange type</h2>\n<p>在做一些对账结算业务的时候会遇到有些汇率在一段时间内对应一部分数据，这种场景用标准的数据结构很难表示，但是postgres的daterange数据类型很好的解决了这个问题，具体用法参见<a href=\"https://tapoueh.org/blog/2018/04/postgresql-data-types-ranges/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://tapoueh.org/blog/2018/04/postgresql-data-types-ranges/</a>，目前在我的业务中涉及到和合作厂商分账，不同厂商不同时间分成比例不同，使用这个类型又好又快的解决了我的问题</p>\n<h2 id=\"with-语句\" style=\"position:relative;\"><a href=\"#with-%E8%AF%AD%E5%8F%A5\" aria-label=\"with 语句 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>with 语句</h2>\n<p>Postgres和sql server都支持with 语句，即可以把一条sql查询的结果临时保存起来，这样做的好处是在编写复杂的sql的时候不需要写很多复杂的嵌套，类似于把sql平铺了，分享一条很巧妙的计算留存的sql，用到了with</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"> <span class=\"token keyword\">with</span> user_register <span class=\"token keyword\">as</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> t2<span class=\"token punctuation\">.</span>user_id <span class=\"token keyword\">as</span> user_id<span class=\"token punctuation\">,</span>\n            t2<span class=\"token punctuation\">.</span>dt <span class=\"token keyword\">as</span> register_day\n     <span class=\"token keyword\">from</span>\n         <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> user_id<span class=\"token punctuation\">,</span>\n                 <span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">date</span><span class=\"token punctuation\">(</span>created_at<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> dt\n          <span class=\"token keyword\">from</span> user_login_logs\n          <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> user_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> t2\n     <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> t2<span class=\"token punctuation\">.</span>user_id<span class=\"token punctuation\">,</span>\n              t2<span class=\"token punctuation\">.</span>dt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      user_cohort <span class=\"token keyword\">as</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> l<span class=\"token punctuation\">.</span>user_id<span class=\"token punctuation\">,</span>\n            r<span class=\"token punctuation\">.</span>register_day<span class=\"token punctuation\">,</span>\n            EXTRACT<span class=\"token punctuation\">(</span><span class=\"token keyword\">DAY</span>\n                    <span class=\"token keyword\">FROM</span> l<span class=\"token punctuation\">.</span>created_at <span class=\"token operator\">-</span> r<span class=\"token punctuation\">.</span>register_day::<span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cohort_day\n     <span class=\"token keyword\">from</span> user_login_logs <span class=\"token keyword\">as</span> l\n     <span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> user_register <span class=\"token keyword\">as</span> r <span class=\"token keyword\">on</span> l<span class=\"token punctuation\">.</span>user_id<span class=\"token operator\">=</span>r<span class=\"token punctuation\">.</span>user_id\n     <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> l<span class=\"token punctuation\">.</span>user_id<span class=\"token punctuation\">,</span>\n              r<span class=\"token punctuation\">.</span>register_day<span class=\"token punctuation\">,</span>\n              cohort_day<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">select</span> register_day<span class=\"token punctuation\">,</span>\n       cohort_day::<span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n       <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> user_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> user_num\n<span class=\"token keyword\">from</span> user_cohort\n<span class=\"token keyword\">where</span> cohort_day <span class=\"token operator\">>=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> register_day<span class=\"token punctuation\">,</span>\n         cohort_day<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"docker-化\" style=\"position:relative;\"><a href=\"#docker-%E5%8C%96\" aria-label=\"docker 化 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker 化</h2>\n<p>待定</p>\n<h2 id=\"版本升级\" style=\"position:relative;\"><a href=\"#%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7\" aria-label=\"版本升级 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>版本升级</h2>\n<p>目前我们用的版本是10，打算直接上12，到时候补上升级经验</p>\n<h2 id=\"主从同步\" style=\"position:relative;\"><a href=\"#%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5\" aria-label=\"主从同步 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>主从同步</h2>\n<p>待定</p>\n<h2 id=\"配置\" style=\"position:relative;\"><a href=\"#%E9%85%8D%E7%BD%AE\" aria-label=\"配置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置</h2>\n<p>在这里要注意postgresql支持本地linux内核授权和自己数据库内授权，按照<code class=\"language-text\">/etc/postgresql/10/main/pg_hba.conf</code> 中的配置</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Database administrative login by Unix domain socket\nlocal   all             postgres                                peer\n\n# TYPE  DATABASE        USER            ADDRESS                 METHOD\n\n# &quot;local&quot; is for Unix domain socket connections only\nlocal   all             all                                     peer\n# IPv4 local connections:\nhost    all             all             127.0.0.1/32            md5\n# IPv6 local connections:\nhost    all             all             ::1/128                 md5</code></pre></div>\n<p>如果使用localhost连接是通过内核校验，所以有时候会出现<code class=\"language-text\">peer校验失败</code>，可以考虑使用网络连接，即换成<code class=\"language-text\">127.0.0.1</code>，这样就会使用postgresql内建的用户系统，当然也可以改这个配置文件然后重启服务，但是不建议这么做</p>","fields":{"slug":"/posts/postgresql-devops/","tagSlugs":["/tag/web/"]},"frontmatter":{"date":"2018-10-31","description":null,"tags":["Web"],"title":"postgresql运维"}}},"pageContext":{"slug":"/posts/postgresql-devops/"}}}